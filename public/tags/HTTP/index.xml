<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>HTTP on 千夜同学</title>
    <link>http://70data.net/tags/HTTP.html</link>
    <description>Recent content in HTTP on 千夜同学</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 28 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://70data.net/tags/HTTP/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>HTTP 传输内容的压缩</title>
      <link>http://70data.net/archives/2017-09-28.html</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>http://70data.net/archives/2017-09-28.html</guid>
      <description>&lt;p&gt;HTTP 压缩，在 HTTP 协议中，其实是内容编码的一种。&lt;/p&gt;
&lt;p&gt;在 HTTP 协议中，可以对内容（也就是 body 部分）进行编码，可以采用 gzip 这样的编码，从而达到压缩的目的。也可以使用其他的编码把内容搅乱或加密，以此来防止未授权的第三方看到文档的内容。所以 HTTP 压缩，其实就是 HTTP 内容编码的一种。&lt;/p&gt;
&lt;p&gt;HTTP 压缩是指: Web 服务器和浏览器之间压缩传输的&amp;quot;文本内容&amp;quot;的方法。HTTP 采用通用的压缩算法，比如 gzip 来压缩 HTML、JavaScript、CSS 文件。能大大减少网络传输的数据量，提高了用户显示网页的速度。&lt;/p&gt;
&lt;p&gt;首先，浏览器发送一个请求（request）给 Web 服务器，支持一个压缩格式如（gzip），服务端会将原来的源码压缩之后，通过 HTTP 响应（response）信息返回给 Web 浏览器，浏览器接收之后，显示出来。&lt;/p&gt;
&lt;p&gt;HTTP 压缩的过程:&lt;/p&gt;
&lt;p&gt;1.浏览器发送 HTTP Request 给 Web 服务器，Request 中有 Accept-Encoding:gzip、deflate。&lt;/p&gt;
&lt;p&gt;2.Web 服务器接到 Request 后，生成原始的 Response，其中有原始的 Content-Type 和 Content-Length。&lt;/p&gt;
&lt;p&gt;3.Web 服务器通过 gzip，来对 Response 进行编码，编码后 header 中有 Content-Type 和 Content-Length（压缩后的大小），并且增加了 Content-Encoding:gzip，然后把 Response 发送给浏览器。&lt;/p&gt;
&lt;p&gt;4.浏览器接到 Response 后，根据 Content-Encoding:gzip 来对 Response 进行解码。获取到原始 Response 后，然后显示出网页。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>